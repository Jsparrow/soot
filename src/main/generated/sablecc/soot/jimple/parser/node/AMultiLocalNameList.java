/* This file was generated by SableCC (http://www.sablecc.org/). */

package soot.jimple.parser.node;

import soot.jimple.parser.analysis.*;

@SuppressWarnings("nls")
public final class AMultiLocalNameList extends PLocalNameList
{
    private PLocalName localName;
    private TComma comma;
    private PLocalNameList localNameList;

    public AMultiLocalNameList()
    {
        // Constructor
    }

    public AMultiLocalNameList(
        @SuppressWarnings("hiding") PLocalName _localName_,
        @SuppressWarnings("hiding") TComma _comma_,
        @SuppressWarnings("hiding") PLocalNameList _localNameList_)
    {
        // Constructor
        setLocalName(_localName_);

        setComma(_comma_);

        setLocalNameList(_localNameList_);

    }

    @Override
    public Object clone()
    {
        return new AMultiLocalNameList(
            cloneNode(this.localName),
            cloneNode(this.comma),
            cloneNode(this.localNameList));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMultiLocalNameList(this);
    }

    public PLocalName getLocalName()
    {
        return this.localName;
    }

    public void setLocalName(PLocalName node)
    {
        if(this.localName != null)
        {
            this.localName.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this.localName = node;
    }

    public TComma getComma()
    {
        return this.comma;
    }

    public void setComma(TComma node)
    {
        if(this.comma != null)
        {
            this.comma.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this.comma = node;
    }

    public PLocalNameList getLocalNameList()
    {
        return this.localNameList;
    }

    public void setLocalNameList(PLocalNameList node)
    {
        if(this.localNameList != null)
        {
            this.localNameList.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this.localNameList = node;
    }

    @Override
    public String toString()
    {
        return new StringBuilder().append("").append(toString(this.localName)).append(toString(this.comma)).append(toString(this.localNameList)).toString();
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this.localName == child)
        {
            this.localName = null;
            return;
        }

        if(this.comma == child)
        {
            this.comma = null;
            return;
        }

        if(this.localNameList == child)
        {
            this.localNameList = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this.localName == oldChild)
        {
            setLocalName((PLocalName) newChild);
            return;
        }

        if(this.comma == oldChild)
        {
            setComma((TComma) newChild);
            return;
        }

        if(this.localNameList == oldChild)
        {
            setLocalNameList((PLocalNameList) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
