/* This file was generated by SableCC (http://www.sablecc.org/). */

package soot.jimple.parser.node;

import soot.jimple.parser.analysis.*;

@SuppressWarnings("nls")
public final class AFullIdentClassName extends PClassName
{
    private TFullIdentifier fullIdentifier;

    public AFullIdentClassName()
    {
        // Constructor
    }

    public AFullIdentClassName(
        @SuppressWarnings("hiding") TFullIdentifier _fullIdentifier_)
    {
        // Constructor
        setFullIdentifier(_fullIdentifier_);

    }

    @Override
    public Object clone()
    {
        return new AFullIdentClassName(
            cloneNode(this.fullIdentifier));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFullIdentClassName(this);
    }

    public TFullIdentifier getFullIdentifier()
    {
        return this.fullIdentifier;
    }

    public void setFullIdentifier(TFullIdentifier node)
    {
        if(this.fullIdentifier != null)
        {
            this.fullIdentifier.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this.fullIdentifier = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this.fullIdentifier);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this.fullIdentifier == child)
        {
            this.fullIdentifier = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this.fullIdentifier == oldChild)
        {
            setFullIdentifier((TFullIdentifier) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
