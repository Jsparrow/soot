/* This file was generated by SableCC (http://www.sablecc.org/). */

package soot.jimple.parser.node;

import soot.jimple.parser.analysis.*;

@SuppressWarnings("nls")
public final class ASigFieldRef extends PFieldRef
{
    private PFieldSignature fieldSignature;

    public ASigFieldRef()
    {
        // Constructor
    }

    public ASigFieldRef(
        @SuppressWarnings("hiding") PFieldSignature _fieldSignature_)
    {
        // Constructor
        setFieldSignature(_fieldSignature_);

    }

    @Override
    public Object clone()
    {
        return new ASigFieldRef(
            cloneNode(this.fieldSignature));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASigFieldRef(this);
    }

    public PFieldSignature getFieldSignature()
    {
        return this.fieldSignature;
    }

    public void setFieldSignature(PFieldSignature node)
    {
        if(this.fieldSignature != null)
        {
            this.fieldSignature.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this.fieldSignature = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this.fieldSignature);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this.fieldSignature == child)
        {
            this.fieldSignature = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this.fieldSignature == oldChild)
        {
            setFieldSignature((PFieldSignature) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
